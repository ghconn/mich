下拉框select选中的text 值:$('select').find('option:selected').text();

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//网页在iframe中，网页里的元素相对浏览器水平居中
$('#judge').css({ "left": (($(top).width() - $(element).width()) / 2 - ($(top).width() - $(window).width())) + 'px', "top": '200px' });
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
var _w = parseInt($(window).width());//获取浏览器的宽度
$(".new_mess_c img").each(function(i){
var img = $(this);
var realWidth;//真实的宽度
var realHeight;//真实的高度
//这里做下说明，$("<img/>")这里是创建一个临时的img标签，类似js创建一个new Image()对象！
$("<img/>").attr("src", $(img).attr("src")).load(function() {
/*
如果要获取图片的真实的宽度和高度有三点必须注意
1、需要创建一个image对象：如这里的$("<img/>")
2、指定图片的src路径
3、一定要在图片加载完成后执行如.load()函数里执行
*/
realWidth = this.width;
realHeight = this.height;
//如果真实的宽度大于浏览器的宽度就按照100%显示
if(realWidth>=_w){
$(img).css("width","100%").css("height","auto");
}
else{//如果小于浏览器的宽度按照原尺寸显示
$(img).css("width",realWidth+'px').css("height",realHeight+'px');
}
});
});
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
未捕获引用错误（Uncaught ReferenceError）.
"严格模式" ('use strict';)

匹配经纬度
/^\d{1,3}(\.\d{1,6})?(E?|W?)\s?,\s?\d{1,2}(\.\d{1,6})?(N?|S?)$/i
匹配正整数或小数
/^\d+(\.\d+)?$/
/^0$|^0\.\d+$|^([1-9]\d*\.0*)?[1-9]+\d*$/
匹配ipv4地址
^((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)$
匹配汉字
^[\u4E00-\u9FFF]+$
匹配邮箱地址
^[a-zA-Z0-9_-]+@@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$
^[a-z0-9]+([._\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//计算字符串中每个字符出现的次数
var arr = 'abcdabbbbbbabc';
var info = arr.split('').reduce((p, k) => (p[k]++ || (p[k] = 1), p), {});//{ a: 3, b: 2, c: 2, d: 1 }
//
var temp = {};
'abcdaabc'.replace(/(\w{1})/g, function (m) {
    temp[m] ? temp[m] += 1 : temp[m] = 1;
})
console.log(temp) // {a: 3, b: 2, c: 2, d: 1}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//计算func1耗时
console.time('func1')
func1()
console.timeEnd('func1')
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
splice(index,num[,item[..,item]])//直接在原数组上做修改，返回删除项组成的数组(如果有删除)，index负数时(-1是倒数第二个)
slice(index[,index2])//不改变原数组，返回切出的新数组，index负数时(-1是倒数第二个)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//valueOf
var func1=function(){
}
func1.valueOf=function(){
	return 5;//return sum;
}
var result=func1();
console.log(+result);//输出5 valueOf
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Array.prototype.sort
1,
sort()//不带参数，升序，数字当做字符处理，11排在2前
2,
sort(function(a,b){return a-b;})//升序
[true,'c',undefined, 'a',2, 1,null, -1, false,'b'].sort(function(a,b){return a-b;})
结果：true,c,b,a,-1,,false,1,2,
3,
sort(function(a,b){return b-a;})//降序
[true,'c',undefined, 'a',2, 1,null, -1, false,'b'].sort(function(a,b){return a-b;})
结果：true,c,b,a,2,1,,false,-1,
//以上结果来自chrome
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//读取cookies 
function getCookie(name) {
    var arr, reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)");
    if (arr = document.cookie.match(reg))
        return unescape(arr[2]);
    else
        return null;
}
function setCookie(name, value, path) {
    var exp = new Date();
    exp.setTime(exp.getTime() + 20 * 60 * 1000); //20分钟过期
    document.cookie = name + "=" + encodeURIComponent(value) + ";expires=" + exp.toGMTString() + ";path=" + path;
    return true;
}
//删除cookies 
function delCookie(name) {
    var exp = new Date();
    exp.setTime(exp.getTime() - 1);
    var cval = getCookie(name);
    if (cval != null)
        document.cookie = name + "=" + cval + ";expires=" + exp.toGMTString();
}
function setSessionCookie(name, value, cookiePath) {
    var isIE = !-[1, ];//判断是否是ie核心浏览器  
    if (isIE) {
        if (value) {
            var expire = "; expires=At the end of the Session";
            var path = "";
            if (cookiePath != null) {
                path = "; path=" + cookiePath;
            }
            document.cookie = name + "=" + escape(value) + expire + path;
        }
    } else {
        if (value) {
            var expire = "; expires=Session";
            var path = "";
            if (cookiePath != null) {
                path = "; path=" + cookiePath;
            }
            document.cookie = name + "=" + escape(value) + expire + path;
        }
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function a(a) {
        var d,
            e,
            b = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",
            c = "";
        for (d = 0; a > d; d += 1)
            e = Math.random() * b.length, e = Math.floor(e), c += b.charAt(e);
        return c
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
[].forEach.call($('p'),(p,i)=>$(p).append('<b>'+i+'</b>'))
//jQuery为选中的所有p元素在末尾添加序号
[].forEach.call($('p'),p=>$(p).css('color','red'))
//jQuery为选中的所有p元素设置css样式

[].forEach.call($$("*"),function(a){
    a.style.outline="1px solid #"+(~~(Math.random()*(1<<24))).toString(16)
})
Array.isArray($('p'))//false
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//range(0,5)
[...Array(5).keys()]//[0,1,2,3,4]
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function GetQueryString(name) {
    var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
    var r = window.location.search.substr(1).match(reg);
    if (r != null)
        return unescape(r[2]);
    return null;
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//根据年月日获取本周星期一和星期日，返回格式:yyyy/MM/dd - yyyy/MM-dd
function getShowWeekText(year, month, date) {
  var newDate = new Date(year, month - 1, date)
  var day = newDate.getDay()
  if(day === 0) {
    day = 7
  }
  var monday = new Date(year, month - 1, date - (day - 1))
  var sunday = new Date(year, month - 1, date + (7 - day))

  return monday.getFullYear() + '/' + (monday.getMonth() + 1) + '/' + monday.getDate()
    + ' - ' + sunday.getFullYear() + '/' + (sunday.getMonth() + 1) + '/' + sunday.getDate()
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

